{"version":3,"sources":["components/Loading/Loading.module.css","components/Lookup/Lookup.module.css","components/Loading/index.js","components/Loading/Loading.js","lib/Parser.js","components/Lookup/index.js","components/Lookup/Lookup.js","components/AsyncLookup/AsyncLookup.js","components/AsyncLookup/index.js","components/App/index.js","components/App/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","loadingSpinner","spin","table","Loading","_ref","text","react_default","a","createElement","className","concat","styles","convertTense","p","i","f","r","l","t","convertMood","s","o","m","convertNumber","d","convertPerson","1","2","3","convertVoice","e","convertForm","convertGender","n","Parser","dictionary","Object","classCallCheck","this","key","_this$dictionary","headwords","notes","roots","_key$split","split","_key$split2","slicedToArray","headwordIndex","rootIndex","notesIndex","_string$split","_string$split2","tense","mood","number","person","voice","form","gender","bundle","headword","Number","root","word","accents","_this","_this$dictionary2","macronLookup","diacriticLookup","lookup","matchingLookups","normalize","filter","ch","test","join","stripAccents","matchingStrings","forEach","fullWord","push","parseKey","Lookup","PropTypes","shape","object","isRequired","exact","greek","latin","func","params","string","props","possibleConstructorReturn","getPrototypeOf","call","parser","handleChange","bind","assertThisInitialized","handleIgnoreAccents","renderEntries","ignoreAccents","setIgnoreAccents","event","value","target","_this$props","history","search","location","pathname","checked","queryString","parse","_this$props2","stringify","map","_ref2","width","href","renderBundle","match","type","onChange","placeholder","aria-label","name","Component","cacheDictionary","loaded","default","localForage","clear","then","setItem","WaitForDownload","Loadable","loader","__webpack_require__","loading","components_Loading","render","components_Lookup","assign","AsyncLookup","getItem","success","catch","App","Fragment","build","BrowserRouter","basename","process","Route","path","component","copyright","github","report","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","error","ReactDOM","components_App","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6c79dd13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingSpinner\":\"Loading_loadingSpinner__2Xll6\",\"spin\":\"Loading_spin__35epR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Lookup_table__2MiW0\"};","import Loading from './Loading';\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Loading.module.css';\n\nconst Loading = ({ text }) => (\n  <div className=\"mt-2\">\n    <div className={`${styles.loadingSpinner} mb-2`} />\n    {text}\n  </div>\n);\n\nLoading.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Loading;\n","const convertTense = {\n  p: 'present',\n  i: 'imperfect',\n  f: 'future',\n  a: 'aorist',\n  r: 'perfect',\n  l: 'pluperfect',\n  t: 'future perfect',\n}\n\nconst convertMood = {\n  i: 'indicative',\n  s: 'subjunctive',\n  o: 'optative',\n  m: 'imperative',\n};\n\nconst convertNumber = {\n  s: 'singular',\n  d: 'dual',\n  p: 'plural',\n};\n\nconst convertPerson = {\n  1: 'first',\n  2: 'second',\n  3: 'third',\n};\n\nconst convertVoice = {\n  a: 'active',\n  m: 'middle',\n  p: 'passive',\n  e: 'middle/passive',\n};\n\nconst convertForm = {\n  i: 'infinitive',\n  p: 'participle',\n};\n\nconst convertGender = {\n  m: 'masculine',\n  f: 'feminine',\n  n: 'neuter',\n};\n\nconst stripAccents = (word) => {\n  return word.normalize('NFD').split('').filter(ch => /[αβγδεζηθικλμνξοπρσςτυφχψω ]/.test(ch)).join('').normalize('NFC')\n};\n\nclass Parser {\n  constructor(dictionary) {\n    this.dictionary = dictionary;\n    // this.matchers = [dictionary.exact, dictionary.greek, dictionary.latin];\n    // this.dictionary = dictionary.dictionary;\n  }\n\n  parseKey(key) {\n    const { headwords, notes, roots } = this.dictionary;\n\n    const [headwordIndex, rootIndex, notesIndex, string] = key.split('~');\n    const [tense, mood, number, person, voice, form, gender] = string.split('');\n\n    const bundle = {};\n\n    if (headwordIndex !== '') {\n      bundle.headword = headwords[Number(headwordIndex)];\n    } else {\n      bundle.headword = '-';\n    }\n\n    if (rootIndex !== '') {\n      bundle.root = roots[Number(rootIndex)];\n    } else {\n      bundle.root = '-';\n    }\n\n    if (notesIndex !== '') {\n      bundle.notes = notes[Number(notesIndex)];\n    } else {\n      bundle.notes = '-';\n    }\n\n    bundle.tense = convertTense[tense] || '-';\n    bundle.mood = convertMood[mood] || '-';\n    bundle.number = convertNumber[number] || '-';\n    bundle.person = convertPerson[person] || '-';\n    bundle.voice = convertVoice[voice] || '-';\n    bundle.form = convertForm[form] || 'finite';\n    bundle.gender = convertGender[gender] || '-';\n\n    return bundle;\n  }\n\n  lookup(word, accents) {\n    const { macronLookup, diacriticLookup, lookup } = this.dictionary;\n\n    let matchingLookups = []\n\n    if (accents) {\n      matchingLookups = macronLookup[word];\n    } else {\n      matchingLookups = diacriticLookup[stripAccents(word)];\n    }\n\n    if (!matchingLookups) {\n      return [];\n    }\n\n    const matchingStrings = [];\n\n    matchingLookups.forEach((fullWord) => {\n      lookup[fullWord].forEach((key) => {\n        matchingStrings.push({\n          fullWord,\n          key,\n          bundle: this.parseKey(key),\n        });\n      });\n    });\n\n    return matchingStrings;\n  };\n}\n\nexport default Parser;\n","import Lookup from './Lookup';\n\nexport default Lookup;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport queryString from 'query-string'\n\nimport styles from './Lookup.module.css';\n\nimport Parser from '../../lib/Parser';\n\nconst dictionaryPropType = PropTypes.shape({\n  dictionary: PropTypes.object.isRequired,\n  exact: PropTypes.object.isRequired,\n  greek: PropTypes.object.isRequired,\n  latin: PropTypes.object.isRequired,\n});\n\nconst historyPropType = PropTypes.shape({\n  push: PropTypes.func.isRequired,\n});\n\nconst matchPropType = PropTypes.shape({\n  params: PropTypes.shape({\n    word: PropTypes.string,\n  }).isRequired,\n});\n\nconst renderBundle = ({\n  headword,\n  root,\n  notes,\n  tense,\n  mood,\n  number,\n  person,\n  voice,\n  form,\n  gender,\n}) => (\n  <table className={`table table-bordered table-striped ${styles.table}`}>\n    <tbody>\n      <tr>\n        <th width=\"33%\">Headword</th>\n        <td>\n          {headword} (<a href={`https://en.wiktionary.org/wiki/${headword}`} target=\"_blank\">link</a>)\n        </td>\n      </tr>\n      <tr>\n        <th>Root</th>\n        <td>{root}</td>\n      </tr>\n      <tr>\n        <th>Notes</th>\n        <td>{notes}</td>\n      </tr>\n      <tr>\n        <th>Tense</th>\n        <td>{tense}</td>\n      </tr>\n      <tr>\n        <th>Mood</th>\n        <td>{mood}</td>\n      </tr>\n      <tr>\n        <th>Number</th>\n        <td>{number}</td>\n      </tr>\n      <tr>\n        <th>Person</th>\n        <td>{person}</td>\n      </tr>\n      <tr>\n        <th>Voice</th>\n        <td>{voice}</td>\n      </tr>\n      <tr>\n        <th>Form</th>\n        <td>{form}</td>\n      </tr>\n      <tr>\n        <th>Gender</th>\n        <td>{gender}</td>\n      </tr>\n    </tbody>\n  </table>\n);\n\nclass Lookup extends Component {\n  constructor(props) {\n    super(props);\n\n    const { dictionary } = this.props;\n\n    this.parser = new Parser(dictionary);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleIgnoreAccents = this.handleIgnoreAccents.bind(this);\n    this.renderEntries = this.renderEntries.bind(this);\n    this.ignoreAccents = this.ignoreAccents.bind(this);\n    this.setIgnoreAccents = this.setIgnoreAccents.bind(this);\n  }\n\n  handleChange(event) {\n    const { value } = event.target;\n    const { history, location: { search } } = this.props;\n\n    history.push({\n      pathname: `/${value}`,\n      search,\n    });\n  }\n\n  handleIgnoreAccents(event) {\n    const { target: { checked } } = event;\n\n    this.setIgnoreAccents(checked);\n  }\n\n  ignoreAccents() {\n    const { search } = this.props.location;\n\n    const { ignoreAccents } = queryString.parse(search)\n\n    return ignoreAccents !== 'false';\n  }\n\n  setIgnoreAccents(ignoreAccents) {\n    const { history, location: { pathname } } = this.props;\n\n    history.push({\n      pathname,\n      search: queryString.stringify({ ignoreAccents }),\n    });\n  }\n\n  renderEntries(word) {\n    const ignoreAccents = this.ignoreAccents();\n    const entries = this.parser.lookup(word, !ignoreAccents);\n\n    return entries.map(({ key, fullWord, bundle }) => (\n      <div className=\"mb-5\" key={key}>\n        <h4>{fullWord}</h4>\n        {renderBundle(bundle)}\n      </div>\n    ));\n  }\n\n  render() {\n    const { match } = this.props;\n    const word = match.params.word || '';\n    const ignoreAccents = this.ignoreAccents();\n\n    return (\n      <div className=\"mt-4\">\n        <div>\n          <input className=\"form-control\" type=\"text\" value={word} onChange={this.handleChange} placeholder=\"Enter verb ...\" aria-label=\"lookup\" />\n        </div>\n        <div className=\"text-right mb-4\">\n          <div className=\"form-check form-check-inline\">\n            <input type=\"checkbox\" className=\"form-check-input\" checked={ignoreAccents} onChange={this.handleIgnoreAccents} name=\"ignoreAccents\" />\n            <label className=\"form-check-label\">Ignore accents</label>\n          </div>\n        </div>\n        {this.renderEntries(word)}\n      </div>\n    );\n  }\n}\n\nexport default Lookup;\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport localForage from 'localforage';\n\nimport Loading from '../Loading';\nimport Lookup from '../Lookup';\n\nconst DICTIONARY_VERSION = 'woodhouse-0.0.1';\n\nconst cacheDictionary = (loaded) => {\n  const dictionary = loaded.default;\n\n  localForage.clear().then(() => localForage.setItem(DICTIONARY_VERSION, dictionary));\n\n  return dictionary;\n};\n\nconst lookupDictionary = () => (\n  localForage.getItem(DICTIONARY_VERSION).then(d => (\n    { success: !!d, dictionary: d }\n  )).catch(() => (\n    { success: false }\n  ))\n);\n\nconst WaitForDownload = Loadable({\n  loader: () => import('../../lib/Dictionary').then(cacheDictionary),\n  loading: () => <Loading text=\"Downloading dictionary...\" />,\n  render(dictionary, props) {\n    return <Lookup {...props} dictionary={dictionary} />;\n  },\n});\n\nconst AsyncLookup = Loadable({\n  loader: lookupDictionary,\n  loading: () => <Loading text=\"Loading dictionary from cache...\" />,\n  render(loaded, props) {\n    if (loaded.success) {\n      return <Lookup {...props} dictionary={loaded.dictionary} />;\n    }\n\n    return <WaitForDownload {...props} />;\n  },\n});\n\nexport default AsyncLookup;\n","import AsyncLookup from './AsyncLookup';\n\nexport default AsyncLookup;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { PerseidsHeader, PerseidsFooter } from 'perseids-react-components';\n\nimport 'perseids-react-components/build/css/index.css';\n\nimport AsyncLookup from '../AsyncLookup';\n\nconst App = () => (\n  <React.Fragment>\n    <PerseidsHeader>\n      Conjugator\n    </PerseidsHeader>\n    <div className=\"container text-center\">\n      <header>\n        <h1 className=\"h3 pt-4 mb-1 font-weight-normal\">\n          Conjugator\n        </h1>\n        <h4 className=\"h5 mb-2 font-weight-normal\">\n          <em>\n            Ancient Greek Verb Conjugator\n          </em>\n        </h4>\n      </header>\n      <main>\n        <div className=\"mb-4\">\n          <Router basename={process.env.PUBLIC_URL}>\n            <Route path=\"/:word?\" component={AsyncLookup} />\n          </Router>\n        </div>\n      </main>\n    </div>\n    <PerseidsFooter\n      copyright=\" \"\n      github=\"https://github.com/perseids-project/greek-conjugator-js\"\n      report=\"https://github.com/perseids-project/greek-conjugator-js/issues\"\n    />\n  </React.Fragment>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}