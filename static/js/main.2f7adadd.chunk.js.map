{"version":3,"sources":["components/Loading/Loading.module.css","components/Lookup/Lookup.module.css","components/Loading/Loading.js","components/Loading/index.js","lib/Parser.js","components/Lookup/Lookup.js","components/Lookup/index.js","components/AsyncLookup/AsyncLookup.js","components/AsyncLookup/index.js","components/App/App.js","components/App/index.js","registerServiceWorker.js","index.js"],"names":["module","exports","Loading","text","className","styles","loadingSpinner","convertTense","p","i","f","a","r","l","t","convertMood","s","o","m","convertNumber","d","convertPerson","1","2","3","convertVoice","e","convertForm","convertGender","n","Parser","constructor","dictionary","this","parseKey","key","headwords","notes","roots","split","headwordIndex","rootIndex","notesIndex","tense","mood","number","person","voice","form","gender","bundle","headword","Number","root","lookup","word","accents","macronLookup","diacriticLookup","matchingLookups","normalize","filter","ch","test","join","stripAccents","matchingStrings","forEach","fullWord","push","Lookup","Component","props","super","parser","handleChange","bind","handleIgnoreAccents","renderEntries","ignoreAccents","setIgnoreAccents","history","pathname","location","search","queryString","stringify","parse","event","checked","target","value","map","table","width","href","rel","renderBundle","render","match","params","type","onChange","placeholder","aria-label","htmlFor","id","name","cacheDictionary","loaded","default","localForage","setItem","AsyncLookup","state","loadingText","componentDidMount","getItem","then","setState","asyncImport","App","basename","process","path","component","copyright","github","report","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2f7adadd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingSpinner\":\"Loading_loadingSpinner__3AFTQ\",\"spin\":\"Loading_spin__27TzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Lookup_table__2Wltj\"};","import React from 'react';\nimport { string } from 'prop-types';\n\nimport styles from './Loading.module.css';\n\nconst Loading = ({ text }) => (\n  <div className=\"mt-2\">\n    <div className={`${styles.loadingSpinner} mb-2`} />\n    {text}\n  </div>\n);\n\nLoading.propTypes = {\n  text: string.isRequired,\n};\n\nexport default Loading;\n","import Loading from './Loading';\n\nexport default Loading;\n","const convertTense = {\n  p: 'present',\n  i: 'imperfect',\n  f: 'future',\n  a: 'aorist',\n  r: 'perfect',\n  l: 'pluperfect',\n  t: 'future perfect',\n};\n\nconst convertMood = {\n  i: 'indicative',\n  s: 'subjunctive',\n  o: 'optative',\n  m: 'imperative',\n};\n\nconst convertNumber = {\n  s: 'singular',\n  d: 'dual',\n  p: 'plural',\n};\n\nconst convertPerson = {\n  1: 'first',\n  2: 'second',\n  3: 'third',\n};\n\nconst convertVoice = {\n  a: 'active',\n  m: 'middle',\n  p: 'passive',\n  e: 'middle/passive',\n};\n\nconst convertForm = {\n  i: 'infinitive',\n  p: 'participle',\n};\n\nconst convertGender = {\n  m: 'masculine',\n  f: 'feminine',\n  n: 'neuter',\n};\n\nconst stripAccents = (word) => word.normalize('NFD').split('').filter((ch) => /[αβγδεζηθικλμνξοπρσςτυφχψω ]/.test(ch)).join('')\n  .normalize('NFC');\n\nclass Parser {\n  constructor(dictionary) {\n    this.dictionary = dictionary;\n    // this.matchers = [dictionary.exact, dictionary.greek, dictionary.latin];\n    // this.dictionary = dictionary.dictionary;\n  }\n\n  parseKey(key) {\n    const { headwords, notes, roots } = this.dictionary;\n\n    const [headwordIndex, rootIndex, notesIndex, string] = key.split('~');\n    const [tense, mood, number, person, voice, form, gender] = string.split('');\n\n    const bundle = {};\n\n    if (headwordIndex !== '') {\n      bundle.headword = headwords[Number(headwordIndex)];\n    } else {\n      bundle.headword = '-';\n    }\n\n    if (rootIndex !== '') {\n      bundle.root = roots[Number(rootIndex)];\n    } else {\n      bundle.root = '-';\n    }\n\n    if (notesIndex !== '') {\n      bundle.notes = notes[Number(notesIndex)];\n    } else {\n      bundle.notes = '-';\n    }\n\n    bundle.tense = convertTense[tense] || '-';\n    bundle.mood = convertMood[mood] || '-';\n    bundle.number = convertNumber[number] || '-';\n    bundle.person = convertPerson[person] || '-';\n    bundle.voice = convertVoice[voice] || '-';\n    bundle.form = convertForm[form] || 'finite';\n    bundle.gender = convertGender[gender] || '-';\n\n    return bundle;\n  }\n\n  lookup(word, accents) {\n    const { macronLookup, diacriticLookup, lookup } = this.dictionary;\n\n    let matchingLookups = [];\n\n    if (accents) {\n      matchingLookups = macronLookup[word];\n    } else {\n      matchingLookups = diacriticLookup[stripAccents(word)];\n    }\n\n    if (!matchingLookups) {\n      return [];\n    }\n\n    const matchingStrings = [];\n\n    matchingLookups.forEach((fullWord) => {\n      lookup[fullWord].forEach((key) => {\n        matchingStrings.push({\n          fullWord,\n          key,\n          bundle: this.parseKey(key),\n        });\n      });\n    });\n\n    return matchingStrings;\n  }\n}\n\nexport default Parser;\n","import React, { Component } from 'react';\nimport {\n  array,\n  func,\n  object,\n  shape,\n  string,\n} from 'prop-types';\nimport queryString from 'query-string';\n\nimport styles from './Lookup.module.css';\n\nimport Parser from '../../lib/Parser';\n\nconst dictionaryPropType = shape({\n  diacriticLookup: object.isRequired,\n  headwords: array.isRequired,\n  lookup: object.isRequired,\n  notes: array.isRequired,\n  macronLookup: object.isRequired,\n  roots: array.isRequired,\n});\n\nconst historyPropType = shape({\n  push: func.isRequired,\n});\n\nconst matchPropType = shape({\n  params: shape({\n    word: string,\n  }).isRequired,\n});\n\nconst locationPropType = shape({\n  search: string.isRequired,\n});\n\nconst renderBundle = ({\n  headword,\n  root,\n  notes,\n  tense,\n  mood,\n  number,\n  person,\n  voice,\n  form,\n  gender,\n}) => (\n  <table className={`table table-bordered table-striped ${styles.table}`}>\n    <tbody>\n      <tr>\n        <th width=\"33%\">Headword</th>\n        <td>\n          {headword}\n          {' '}\n          (\n          <a href={`https://en.wiktionary.org/wiki/${headword}`} rel=\"noopener noreferrer\" target=\"_blank\">link</a>\n          )\n        </td>\n      </tr>\n      <tr>\n        <th>Root</th>\n        <td>{root}</td>\n      </tr>\n      <tr>\n        <th>Notes</th>\n        <td>{notes}</td>\n      </tr>\n      <tr>\n        <th>Tense</th>\n        <td>{tense}</td>\n      </tr>\n      <tr>\n        <th>Mood</th>\n        <td>{mood}</td>\n      </tr>\n      <tr>\n        <th>Number</th>\n        <td>{number}</td>\n      </tr>\n      <tr>\n        <th>Person</th>\n        <td>{person}</td>\n      </tr>\n      <tr>\n        <th>Voice</th>\n        <td>{voice}</td>\n      </tr>\n      <tr>\n        <th>Form</th>\n        <td>{form}</td>\n      </tr>\n      <tr>\n        <th>Gender</th>\n        <td>{gender}</td>\n      </tr>\n    </tbody>\n  </table>\n);\n\nrenderBundle.propTypes = {\n  headword: string.isRequired,\n  root: string.isRequired,\n  notes: string.isRequired,\n  tense: string.isRequired,\n  mood: string.isRequired,\n  number: string.isRequired,\n  person: string.isRequired,\n  voice: string.isRequired,\n  form: string.isRequired,\n  gender: string.isRequired,\n};\n\nclass Lookup extends Component {\n  constructor(props) {\n    super(props);\n\n    const { dictionary } = this.props;\n\n    this.parser = new Parser(dictionary);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleIgnoreAccents = this.handleIgnoreAccents.bind(this);\n    this.renderEntries = this.renderEntries.bind(this);\n    this.ignoreAccents = this.ignoreAccents.bind(this);\n    this.setIgnoreAccents = this.setIgnoreAccents.bind(this);\n  }\n\n  setIgnoreAccents(ignoreAccents) {\n    const { history, location: { pathname } } = this.props;\n\n    history.push({\n      pathname,\n      search: queryString.stringify({ ignoreAccents }),\n    });\n  }\n\n  ignoreAccents() {\n    const { location } = this.props;\n\n    const { ignoreAccents } = queryString.parse(location.search);\n\n    return ignoreAccents !== 'false';\n  }\n\n  handleIgnoreAccents(event) {\n    const { target: { checked } } = event;\n\n    this.setIgnoreAccents(checked);\n  }\n\n  handleChange(event) {\n    const { value } = event.target;\n    const { history, location: { search } } = this.props;\n\n    history.push({\n      pathname: `/${value}`,\n      search,\n    });\n  }\n\n  renderEntries(word) {\n    const ignoreAccents = this.ignoreAccents();\n    const entries = this.parser.lookup(word, !ignoreAccents);\n\n    return entries.map(({ key, fullWord, bundle }) => (\n      <div className=\"mb-5\" key={key}>\n        <h4>{fullWord}</h4>\n        {renderBundle(bundle)}\n      </div>\n    ));\n  }\n\n  render() {\n    const { match } = this.props;\n    const word = match.params.word || '';\n    const ignoreAccents = this.ignoreAccents();\n\n    return (\n      <div className=\"mt-4\">\n        <div>\n          <input className=\"form-control\" type=\"text\" value={word} onChange={this.handleChange} placeholder=\"Enter verb ...\" aria-label=\"lookup\" />\n        </div>\n        <div className=\"text-right mb-4\">\n          <div className=\"form-check form-check-inline\">\n            <label htmlFor=\"ignore-accent\" className=\"form-check-label\">\n              <input type=\"checkbox\" id=\"ignore-accent\" className=\"form-check-input\" checked={ignoreAccents} onChange={this.handleIgnoreAccents} name=\"ignoreAccents\" />\n              Ignore accents\n            </label>\n          </div>\n        </div>\n        {this.renderEntries(word)}\n      </div>\n    );\n  }\n}\n\nLookup.propTypes = {\n  dictionary: dictionaryPropType.isRequired,\n  history: historyPropType.isRequired,\n  match: matchPropType.isRequired,\n  location: locationPropType.isRequired,\n};\n\nexport default Lookup;\n","import Lookup from './Lookup';\n\nexport default Lookup;\n","import React, { Component } from 'react';\nimport localForage from 'localforage';\n\nimport Loading from '../Loading';\nimport Lookup from '../Lookup';\n\nconst DICTIONARY_VERSION = 'conjugator-0.0.1';\n\nconst cacheDictionary = (loaded) => {\n  const dictionary = loaded.default;\n\n  localForage.setItem(DICTIONARY_VERSION, dictionary);\n\n  return dictionary;\n};\n\nclass AsyncLookup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loadingText: 'Loading dictionary from cache...',\n      dictionary: null,\n    };\n  }\n\n  componentDidMount() {\n    localForage.getItem(DICTIONARY_VERSION).then((dictionary) => {\n      if (dictionary) {\n        this.setState({ dictionary });\n      } else {\n        this.setState({ loadingText: 'Downloading dictionary...' }, this.asyncImport);\n      }\n    });\n  }\n\n  asyncImport() {\n    import('../../lib/Dictionary').then(cacheDictionary).then((dictionary) => {\n      this.setState({ dictionary });\n    });\n  }\n\n  render() {\n    const {\n      loadingText,\n      dictionary,\n    } = this.state;\n\n    if (dictionary === null) {\n      return <Loading text={loadingText} />;\n    }\n\n    return <Lookup {...this.props} dictionary={dictionary} />;\n  }\n}\n\nexport default AsyncLookup;\n","import AsyncLookup from './AsyncLookup';\n\nexport default AsyncLookup;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { PerseidsHeader, PerseidsFooter } from 'perseids-react-components';\n\nimport 'perseids-react-components/build/css/index.css';\n\nimport AsyncLookup from '../AsyncLookup';\n\nconst App = () => (\n  <>\n    <PerseidsHeader>\n      Conjugator\n    </PerseidsHeader>\n    <div className=\"container text-center\">\n      <header>\n        <h1 className=\"h3 pt-4 mb-1 font-weight-normal\">\n          Conjugator\n        </h1>\n        <h4 className=\"h5 mb-2 font-weight-normal\">\n          <em>\n            Ancient Greek Verb Conjugator (powered by Wiktionary)\n          </em>\n        </h4>\n      </header>\n      <main>\n        <div className=\"mb-4\">\n          <Router basename={process.env.PUBLIC_URL}>\n            <Route path=\"/:word?\" component={AsyncLookup} />\n          </Router>\n        </div>\n      </main>\n    </div>\n    <PerseidsFooter\n      copyright=\" \"\n      github=\"https://github.com/perseids-project/greek-conjugator-js\"\n      report=\"https://github.com/perseids-project/greek-conjugator-js/issues\"\n    />\n  </>\n);\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}